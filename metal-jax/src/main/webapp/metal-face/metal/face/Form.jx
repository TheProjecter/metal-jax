/**
 * @face Form
 * @imports metal.jax.System
 */

//@private
var $count = 0;

//@protected
function initNode(object, node) {
	object.nodes = object.nodes || {};
	object.inputs = object.inputs || {};
	switch (node.nodeName.toLowerCase()) {
	case "form":
		node.name = System.parseBaseName(object.getClass().getName()).concat($count++);
		object.nodes["form"] = node;
		break;
	case "fieldset":
		object.nodes["fieldset"] = node;
		break;
	case "legend":
		object.bind(toggleForm, node, "click");
		break;
	case "label":
		node.htmlFor = object.nodes["form"].name.concat(".", node.htmlFor);
		break;
	case "input":
	case "select":
	case "textarea":
		object.inputs[node.name] = node;
	case "button":
		node.id = object.nodes["form"].name.concat(".", node.name);
		object.nodes[node.name] = node;
		break;
	default:
		return $super.$protected.initNode(object, node);
	}
}

//@public
function get(name) {
	if (this.inputs[name]) {
		return this.inputs[name].value;
	}
	return $super.get.apply(this, arguments);
}

//@public
function set(name, value) {
	if (this.inputs[name]) {
		return this.inputs[name].value = value;
	}
	return $super.set.apply(this, arguments);
}

//@private
function toggleForm() {
	var fieldset = this.nodes["fieldset"];
	if (fieldset.className == "expanded") {
		fieldset.className = "collapsed";
	} else {
		fieldset.className = "expanded";
	}
}
