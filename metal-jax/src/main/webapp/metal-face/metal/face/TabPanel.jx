/**
 * @face TabPanel
 * 
 * @copyright Jay Tang 2012. All rights reserved.
 */

//@private
var _panelStyles_ = [ "tabTop", "tabBottom" ];

//@private
var _partStyles_ = [ "tabLabel", "tabContent" ];

//@private
function initObject(object, node) {
	var panelStyle = filterStyle(object.node, _panelStyles_, true);
	setStyle(object.node, [panelStyle, "tabPanel"]);
	if (panelStyle == "tabBottom") {
		object.nodes.tabHead.parentNode.insertBefore(object.nodes.tabBody, object.nodes.tabHead);
	}
	if (!object.selectedLabel) {
		toggleTabSelection.call(object, getChildByIndex(object.nodes.tabHead, 0));
	}
}

//@protected
function initNode(object, node) {
	var panelStyle = filterStyle(object.node, _panelStyles_, true);
	var style;
	switch (node.id) {
	case "tabHead":
	case "tabBody":
		style = filterStyle(node, _panelStyles_, true);
		toggleStyle(node, style, panelStyle);
		return;
	}
	
	style = filterStyle(node, _partStyles_);
	switch (style) {
	case "tabLabel":
		if (!object.tabLabel) {
			object.tabLabel = node;
			setStyle(node, "selected", false);
		}
		break;
	case "tabContent":
		if (!object.tabContent) {
			object.tabContent = node;
			setStyle(node, "selected", false);
		}
		break;
	}
}

//@protected
function initContent(object, content) {
	clearHTML(object.nodes.tabHead);
	clearHTML(object.nodes.tabBody);
}

//@protected
function initContentNode(object, node, nodeId) {
	var tabLabel = object.tabLabel.cloneNode(false);
	tabLabel.id = node.id;
	tabLabel.innerHTML = node.title || node.id;
	object.nodes.tabHead.appendChild(tabLabel);
	initTabLabel(object, tabLabel);
	
	var tabContent = object.tabContent.cloneNode(false);
	tabContent.id = node.id;
	tabContent.appendChild(node);
	object.nodes.tabBody.appendChild(tabContent);
}

//@protected
function initContentSetting(object, name, value) {
	switch (name) {
	case "select":
		toggleTabSelection.call(object, getChildById(object.nodes.tabHead, value));
		break;
	}
}

//@private
function initTabLabel(object, tabLabel) {
	object.bind("mouseover", toggleHighlight, tabLabel);
	object.bind("mouseout", toggleHighlight, tabLabel);
	object.bind("click", toggleTabSelection, tabLabel);
}

//@private
function getTabContent(object, tabLabel) {
	return getChildByIndex(object.nodes.tabBody, indexOfChild(object.nodes.tabHead, tabLabel));
}

//@private
function toggleHighlight(tabLabel) {
	toggleStyle(tabLabel, "highlight");
	return true;
}

//@private
function toggleTabSelection(tabLabel) {
	if (this.selectedLabel != tabLabel) {
		if (this.selectedLabel) {
			toggleStyle(this.selectedLabel, "selected");
			toggleStyle(getTabContent(this, this.selectedLabel), "selected");
		}
		toggleStyle(tabLabel, "selected");
		toggleStyle(getTabContent(this, tabLabel), "selected");
		this.selectedLabel = tabLabel;
	}
}
