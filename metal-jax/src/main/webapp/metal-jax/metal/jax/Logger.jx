/**
 * @class Logger
 * @imports System
 * 
 * @copyright Jay Tang 2012
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */

//@private
function initClass() {
	this.enableInfo = $("class.info", $("logger.info", "true")) == "true";
	this.enableWarn = $("class.warn", $("logger.warn", "true")) == "true";
	this.enableError = $("class.error", $("logger.error", "true")) == "true";
	this.enableDebug = $("class.debug", $("logger.debug", "false")) == "true";
}

//@static
function log() {
	var level = Array.prototype.shift.call(arguments);
	arguments[0] = this.$(arguments[0], arguments[0]);
	var msg = System.formatText.apply(null, arguments);
	if (typeof console != "undefined") {
		var line = formatLine.call(this, level.toUpperCase(), msg);
		if (typeof console[level] != "undefined") console[level](line);
		else console.log(line);
	}
	return msg;
}

//@private
function formatLine(level, msg) {
	if (typeof msg != "string") return msg;
	var category = System.parseBaseName(this.getName());
	return System.formatText("${time} ${level} ${category} - ${msg}", {time:now(), level:level, category:category, msg:msg});
}

//@private
function now() {
	var d = new Date();
	return (d.toJSON||d.toString).call(d);
}
