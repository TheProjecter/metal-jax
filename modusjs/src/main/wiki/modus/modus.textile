<link type="text/css" rel="stylesheet" href="../styles/main.css"/>

p(title). Context @modus.core@

{toc:style=decimal}

h1. Overview

This is the boot context. Its loading will bootstrap the application.

h1. Summary

The boot context accomplishes the following:
* Configures initial context settings.
* Bootstraps the class loader.
* Bootstraps the app base context.

The boot context handles source loading across domain. A few bootstrapping methods are published to class loader scope for reuse.

See also: "@modus.core.Context@":modus.core.Context.html

h1. Details

h2. Context Settings

Settings are configuration parameters/properties.

table(grid).
|_.Name |_.Value |_.Comments |
| baseURL | _Readonly_ | The document URL. |
| baseOrigin | _Readonly_ | The base URL origin. |
| baseScheme | _Readonly_ | The base URL scheme. |
| baseModule | _Required_ | The folder for baseContext. |
| baseContext | @base@ | The initial app context. |
| base | _Default empty_ | The fallback for baseContext. Specified with fragment in the base URL. |
| bootURL | _Readonly_ | The URL to load modus boot context. |
| bootOrigin | _Readonly_ | The boot URL origin. |
| bootModule | @modusjs@ | The folder for modusjs. |
| bootContext | @boot@ | The initial modusjs context. |
| crossDomain | @xd@ | Path segment to identify cross domain requests. |
| requestTime | @100@ | Initial timeout value for cross domain requests, in mili-seconds |
| requestTimeout | @3000@ | Max timeout value for cross domain requests, in mili-seconds |
| classType | @js@ | File extension for jax source files. |
| faceType | @html@ | File extension for jax face source files. |

h2. Source Properties

Source properties are source parsing results for class/context creation.

table(grid).
|_.Name |_.Value |_.Comments |
| stereotype | @context@ | Type token for context creation. |
| name | @modus.core.Context@ | Identifies source as well as class/context. |
| scope | $public, $protected, $static, $imports, $requires, $setting | Private scope variables. |
| setting | source, stereotype | _More settings_. |

h2. Context Source Settings

Context source settings define context source locations.

table(grid).
|_.Name |_.Value |_.Comments |
| base | ${bootURL} | Base path to load context sources. |
| module | ${bootModule} | Module folder to load context sources. |
| includes | ^modus | Regexp for source names. |

h2. Source Stereotypes

Source stereotypes define default base class for each type.

table(grid).
|_.Name |_.Value |_.Comments |
| class | @modus.core.BaseObject@ | Class source. |
| context | @modus.core.Context@ | Context source. |
| face | @modus.resource.Face@ | Face source. |
| html | @modus.resource.Face@ | HTML source. |
| resource | @modus.core.Resource@ | Resource source. |
| service | @modus.core.Service@ | Service source. |

h2. Bootstrapping Methods

These methods are published to class loader scope.

table(grid).
|_.Name |_.Scope |_.Comments |
| compile | private | Used by class loader to eval class source. |
| loadback | private | Used by class loader to load class source. |
| splitPath | static | For splitting path. |
| resolvePath | static | For resolving path against a base path. |

h2. Bootstrapping Steps

# Parse baseURL and bootURL to initialize settings.
# Load Context source.
# Evaluate source and initialize Context as a class, including its dependency classes.
# Load and initialize base context.
## Load base context as a class.
## Parse base document for classes.
## Try loading boot class.
